@model HotelsModel
﻿@using Microsoft.AspNet.Identity
@using ProjektGrupowyGis.Models
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>
<link href="@Url.Content("~/Content/style.css")" rel = "stylesheet" />
<script type="text/javascript" src="~/Scripts/Map/map.js"></script>
<script>
    document.onreadystatechange = function(){
        document.getElementById("529-star-1").value;
        var allElements = document.getElementsByClassName("rating");
        Array.prototype.forEach.call(allElements, function(el){
            var id = el.id;
            var rate = id.substring(id.lastIndexOf('-') + 1)
            if(rate != "0"){
                var hotelId = id.substring(0, id.indexOf('-')+1);
                var sId = "" + hotelId + "star-";
                initRate(sId, rate);
            }
;        })
    }
        function rateHover(element) {
            var count = element.attributes.value.value;
            var id = element.attributes.id.value;
            var hotelId = id.substring(0, id.indexOf('-'));
            for (var i = count; i > 0; i--) {
                var starId = "" + hotelId + "-star-" + i;
                document.getElementById(starId).className = "starYellow clearButton";
            }
            for (var i = 5; i > count; i--) {
                var starId = "" + hotelId + "-star-" + i;
                document.getElementById(starId).className = "starOutline clearButton";
            }
        }

        function rateClick(element) {
            var id = element.attributes.id.value;
            var hotelId = id.substring(0, id.indexOf('-'));
            var userRate = id.substring(id.lastIndexOf('-') + 1);
            console.log(userRate);
            console.log(hotelId);
            var ratee = {
                'userLogin': "@User.Identity.Name",
                'hotelId': hotelId,
                'rate': userRate
            };
            console.log(JSON.stringify(ratee));
            $.ajax({
                url: "/Hotels/RateHotel",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(ratee),
                success: function (result) {
                    setTimeout(function () {
                        setRate(element, result.response);
                    }, 500);
                }
            });
        }

        function initRate(id, count){
            for (var i = count; i > 0; i--) {
                var starId = "" + id + i;
                document.getElementById(starId).className = "starYellow clearButton";
            }
            for (var i = 5; i > count; i--) {
                var starId = "" + id + i;
                document.getElementById(starId).className = "starOutline clearButton";
            }
        }

        function setRate(element, count) {
            console.log(element);
            console.log(count);
            var id = element.attributes.id.value;
            var hotelId = id.substring(0, id.indexOf('-'));
            for (var i = count; i > 0; i--) {
                var starId = "" + hotelId + "-star-" + i;
                document.getElementById(starId).className = "starYellow clearButton";
            }
            for (var i = 5; i > count; i--) {
                var starId = "" + hotelId + "-star-" + i;
                document.getElementById(starId).className = "starOutline clearButton";
            }
        }
</script>

<h2>Hotels List</h2>

<div style="margin-bottom:20px;">
    @using (Html.BeginForm("Index", "Hotels", FormMethod.Get, new { @id="filterHotelsForm"}))
    {
        <div class="form-inline">
            <div class="form-row" style="margin-bottom: 15px">
                Name: @Html.TextBoxFor(s => s.Search.nameSearch, new { @class = "form-control" })
                Address: @Html.TextBoxFor(s => s.Search.addressSearch, new { @class = "form-control" })
                Users rate: @Html.TextBoxFor(s => s.Search.usersRateFrom, new { @type = "number", @step = "0.1", @min = "0", @max = "5", @class = "form-control", @style = "width: 70px;" })
                to: @Html.TextBoxFor(s => s.Search.usersRateTo, new { @type = "number", @step = "0.1", @min = "0", @max = "5", @class = "form-control", @style = "width: 70px;" })
                @if (Model.CanRate)
                {
                    <text>
                        Your rate: @Html.TextBoxFor(s => s.Search.yourRateFrom, new { @type = "number", @step = "0.1", @min = "0", @max = "5", @class = "form-control", @style = "width: 70px;" })
                        to: @Html.TextBoxFor(s => s.Search.yourRateTo, new { @type = "number", @step = "0.1", @min = "0", @max = "5", @class = "form-control", @style = "width: 70px;" })
                    </text>
                }
            </div>
            <div class="form-row" style="margin-bottom: 15px">
                Distance(m): @Html.TextBoxFor(s => s.Search.distance, new { @type = "number", @min = "0", @class = "form-control", @style = "width: 100px;" })
                @Html.Hidden("Lat", Model.Search.lat, new { @id = "Lat" })
                @Html.Hidden("Lng", Model.Search.lng, new { @id = "Lng" })
                <script type="text/javascript">
                    $(document).ready(function (e) {
                        console.log("berfore submit", navigator.geolocation);
                        if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(function (position) {
                                var pos = {
                                    lat: position.coords.latitude,
                                    lng: position.coords.longitude
                                };
                                console.log(pos);
                                document.getElementById("Lat").value = pos.lat;
                                document.getElementById("Lng").value = pos.lng;
                            })
                        }
                    });
                </script>
                <input type="submit" style="float: right; margin-bottom:20px;" class="btn btn-primary" value="Filter" />
            </div>
        </div>
    }
</div>
    <div class="container" onload="onLoad()">
        <table class="table table-striped table-bordered table-responsive table-condensed table-hover">
            <thead>
                <tr>
                    <th class="col-md-2">Name</th>
                    <th class="col-md-2">Address</th>
                    <th class="col-md-2">Phone number</th>
                    <th class="col-md-2">Website</th>
                    <th class="col-md-1">Users rate</th>
                    @if (Model.CanRate)
                    {
                        <th class="col-md-1">Your rate</th>
                    }
                    @if (Model.CanEdit)
                    {
                        <th class="pl-4">@Html.ActionLink(" ", "Create", null, new { @class = "glyphicon glyphicon-plus" })</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var h in Model.Hotels)
            {
                    <tr>
                        <td class="col-md-2">
                            @h.Name
                        </td>
                        <td class="col-md-2">
                            @h.FullAddress
                        </td>
                        <td class="col-md-2">
                            @h.Phone
                        </td>
                        <td class="col-md-2">
                            <a href="@h.Webpage">@h.Webpage</a>
                        </td>
                        <td class="col-md-1">
                            @h.Avg_Rate.ToString("0.#") <br /><i style="font-size:small">Quantity: @h.RatesCount</i> 
                        </td>
                @if (Model.CanRate)
                {
                    <td>
                        <div id="@h.Id_Hotel-rating-@h.User_Rate" class="rating">
                            <button id="@h.Id_Hotel-star-1" class="starOutline clearButton" value="1" onmouseout="setRate(this, @h.User_Rate)" onmouseover="rateHover(this)" onclick="rateClick(this)"></button>
                            <button id="@h.Id_Hotel-star-2" class="starOutline clearButton" value="2" onmouseout="setRate(this, @h.User_Rate)" onmouseover="rateHover(this)" onclick="rateClick(this)"></button>
                            <button id="@h.Id_Hotel-star-3" class="starOutline clearButton" value="3" onmouseout="setRate(this, @h.User_Rate)" onmouseover="rateHover(this)" onclick="rateClick(this)"></button>
                            <button id="@h.Id_Hotel-star-4" class="starOutline clearButton" value="4" onmouseout="setRate(this, @h.User_Rate)" onmouseover="rateHover(this)" onclick="rateClick(this)"></button>
                            <button id="@h.Id_Hotel-star-5" class="starOutline clearButton" value="5" onmouseout="setRate(this, @h.User_Rate)" onmouseover="rateHover(this)" onclick="rateClick(this)"></button>
                        </div>
                    </td>
                }
                @if (Model.CanEdit)
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { idHotel = h.Id_Hotel })
                    </td>
                }
            </tr>
                }
            </tbody>
        </table>
        Page @(Model.Hotels.PageCount < Model.Hotels.PageNumber ? 0 : Model.Hotels.PageNumber) of @Model.Hotels.PageCount
        @Html.PagedListPager(Model.Hotels, page => Url.Action("Index", new { page = page, search = ViewBag.CurrentSearch, name = ViewBag.CurrentSearch.nameSearch, address = ViewBag.CurrentSearch.addressSearch, userRateFrom =  ViewBag.CurrentSearch.usersRateFrom, userRateTo = ViewBag.CurrentSearch.usersRateTo,
        yourRateFrom = ViewBag.CurrentSearch.yourRateFrom, yourRateTo = ViewBag.CurrentSearch.yourRateTo, distance = ViewBag.CurrentSearch.distance, lat = ViewBag.CurrentSearch.lat, lng = ViewBag.CurrentSearch.lng 
        }))
    </div>

